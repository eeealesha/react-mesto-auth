{"version":3,"sources":["components/Header.js","contex/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/ImagePopup.js","utils/api.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/ProtectedRoute.js","images/Union.svg","images/Union-2.svg","components/InfoTooltip.js","components/Register.js","components/Login.js","utils/auth.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","email","to","page","onClick","name","CurrentUserContext","React","createContext","Card","currentUser","useContext","isOwn","card","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","type","onCardDelete","src","link","alt","onCardLike","length","Main","avatar","onEditAvatar","onEditProfile","about","onAddPlace","cards","map","onCardClick","Footer","PopupWithForm","isOpen","onSubmit","noValidate","onClose","title","children","buttonText","ImagePopup","createdAt","like","Api","options","this","baseUrl","headers","res","ok","json","Promise","reject","Error","status","fetch","then","_response","userName","userAbout","method","body","JSON","stringify","userAvatar","cardName","cardLink","console","log","cardId","b","EditProfilePopup","useState","setName","description","setDescription","useEffect","e","preventDefault","onUpdateUser","id","required","minLength","maxLength","value","onChange","target","EditAvatarPopup","avatarRef","useRef","current","onUpdateAvatar","placeholder","ref","AddPlacePopup","setTitle","setLink","ProtectedRoute","loggedIn","Component","InfoTooltip","error","fail","success","message","Register","setEmail","password","setPassword","handleRegister","isToolTipOpen","Login","handleLogin","BASE_URL","App","isLoggedIn","setIsLoggedIn","isEditProfilePopupOpen","setEditProfilePopupOpen","isAddPlacePopupOpen","setAddPlacePopupOpen","isEditAvatarPopupOpen","setAvatarPopupOpen","isImagePopupOpen","setImagePopupOpen","selectedCard","setSelectedCard","currentEmail","setCurrentEmail","setCurrentUser","setCards","setMessage","setToolTipOpen","setError","history","useHistory","api","localStorage","getItem","closeAllPopups","all","getInitialCards","getUserInfo","values","initialCards","userData","catch","err","tokenCheck","token","data","auth","push","removeItem","Provider","path","setItem","undefined","changeLikeCardStatus","newCard","newCards","c","deleteCard","filter","exact","sendUserInfo","sendUserAvatar","postNewCard","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5059da80.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Header(props) {\n  return (\n    <header className=\"header\">\n      <div className=\"header__logo\"></div>\n      <div className=\"login__wrapper\">\n        <p className=\"login__text\">\n          {props.email}\n          <Link\n            to={props.page}\n            onClick={props.onClick}\n            className=\"login__link login__link_header\"\n          >\n            {\" \"}\n            {props.name}\n          </Link>\n        </p>\n      </div>\n    </header>\n  );\n}\n","\nimport React from 'react';\n// Создайте файл src/contexts/CurrentUserContext.js и экспортируйте из него новый объект контекста.\nexport const CurrentUserContext = React.createContext();","import {CurrentUserContext} from '../contex/CurrentUserContext';\nimport React from \"react\";\n\nexport function Card(props) {\n    // Подписываемся на контекст\n    const currentUser = React.useContext(CurrentUserContext);\n    // Определяем, являемся ли мы владельцем текущей карточки\n    const isOwn = props.card.owner === currentUser._id;\n    // Создаём переменную, которую после зададим в `className` для кнопки удаления\n    const cardDeleteButtonClassName = (\n        `button button_type_delete ${isOwn ? '' : 'button_hidden'}`\n    );\n\n    // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\n    const isLiked = props.card.likes.some(i => i._id === currentUser._id);\n\n    // Создаём переменную, которую после зададим в `className` для кнопки лайка\n    const cardLikeButtonClassName = `button button_type_like ${isLiked ? 'button_liked' : ''}`;\n\n    return (\n        <li className=\"card__element\">\n            <div className=\"card\">\n                <button className={cardDeleteButtonClassName} type=\"button\" onClick={() => props.onCardDelete(props.card)}></button>\n                <img\n                    className=\"photo-grid__item\"\n                    src={props.card.link}\n                    alt=\"Картинка, которая иллюстрирует название\"\n                    onClick={() => props.onClick(props.card)}\n                />\n                <div className=\"photo-grid__caption\">\n                    <h2 className=\"photo-grid__title\">{props.card.name}</h2>\n                    <div className=\"photo-grid__wrapper\">\n                        <button onClick={() => props.onCardLike(props.card)} className={cardLikeButtonClassName} type=\"button\"></button>\n                        <span className=\"photo-grid__like-counter\">{props.card.likes.length}</span>\n                    </div>\n                </div>\n            </div>\n        </li>\n    )\n}","import React from \"react\";\nimport { Card } from \"./Card\";\nimport { CurrentUserContext } from \"../contex/CurrentUserContext\";\n\nexport default function Main(props) {\n  // Подписываемся на контекст\n  const currentUser = React.useContext(CurrentUserContext);\n\n  return (\n    <main className=\"content\">\n      <section className=\"profile\">\n        <div className=\"profile__description\">\n          <div className=\"profile__avatar\">\n            <img\n              className=\"profile__picture\"\n              src={currentUser.avatar}\n              alt=\"Фотография Жака-Ив Кусто\"\n            />\n            <button\n              className=\"button botton_type_avatar\"\n              type=\"button\"\n              onClick={props.onEditAvatar}\n            ></button>\n          </div>\n          <div className=\"profile__text\">\n            <div className=\"profile__wrapper\">\n              <h1 className=\"profile__title\">{currentUser.name}</h1>\n              <button\n                className=\"button button_type_edit\"\n                type=\"button\"\n                onClick={props.onEditProfile}\n              ></button>\n            </div>\n            <p className=\"profile__subtitle\">{currentUser.about}</p>\n          </div>\n        </div>\n        <button\n          className=\"button button_type_add\"\n          type=\"button\"\n          onClick={props.onAddPlace}\n        ></button>\n      </section>\n      <section className=\"photo-grid\">\n        <ul className=\"photo-grid__list\">\n          {props.cards.map((card, i) => (\n            <Card\n              card={card}\n              key={card._id}\n              onClick={props.onCardClick}\n              onCardLike={props.onCardLike}\n              onCardDelete={props.onCardDelete}\n            />\n          ))}\n        </ul>\n      </section>\n    </main>\n  );\n}\n","export default function Footer() {\n  return (\n    <footer className=\"footer\">\n      <p className=\"footer__author\">© 2020 Mesto Russia</p>\n    </footer>\n  );\n}\n","import React from \"react\";\n\nexport function PopupWithForm(props) {\n  return (\n    <div\n      className={`popup popup_type_${props.name} ${\n        props.isOpen ? \"popup_opened\" : \"\"\n      }`}\n    >\n      <form\n        onSubmit={props.onSubmit}\n        className=\"popup__container\"\n        name={`${props.name}`}\n        noValidate\n      >\n        <button\n          className=\"button button_type_close\"\n          type=\"button\"\n          onClick={props.onClose}\n        ></button>\n        <h2 className=\"popup__title\">{props.title}</h2>\n        <fieldset className=\"form\">\n          {props.children}\n          <button className=\"button button_type_submit\">\n            {props.buttonText}\n          </button>\n        </fieldset>\n      </form>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport function ImagePopup(props) {\n  return (\n    <div\n      className={`popup popup_type_fig ${props.isOpen ? \"popup_opened\" : \"\"}`}\n    >\n      <figure className=\"popup__figure\">\n        <button\n          className=\"button button_type_close\"\n          type=\"button\"\n          onClick={props.onClose}\n        ></button>\n        <img\n          className=\"popup__img\"\n          src={props.card ? props.card.link : \"\"}\n          alt={props.card ? `Картинка с изображением ${props.card.name}` : \"\"}\n        />\n        <figcaption className=\"popup__figcaption popup__figcaption-text\">\n          {props.card ? props.card.name : \"\"}\n        </figcaption>\n        <figcaption className=\"popup__figcaption popup__figcaption-owner\">\n          {props.card ? props.card.owner.name : \"\"}\n        </figcaption>\n        <figcaption className=\"popup__figcaption popup__figcaption-date\">\n          {props.card ? props.card.createdAt : \"\"}\n        </figcaption>\n        <figcaption className=\"popup__figcaption popup__figcaption-who\">\n          Кому нравится?\n        </figcaption>\n        <figcaption className=\"popup__figcaption popup__figcaption-likes\">\n          {props.card\n            ? props.card.likes.map((like, i) => <div key={i}>{like.name}</div>)\n            : \"\"}\n        </figcaption>\n      </figure>\n    </div>\n  );\n}\n","\n\nexport class Api {\n  constructor(options) {\n    this.baseUrl = options.baseUrl;\n    this.headers = options.headers;\n  }\n\n  _response(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(new Error(`Ошибка: ${res.status}`));\n  }\n\n  getUserInfo() {\n    return fetch(`${this.baseUrl}/users/me`, {\n      headers: this.headers,\n    }).then(this._response);\n  }\n\n  sendUserInfo(userName, userAbout) {\n    return fetch(`${this.baseUrl}/users/me`, {\n      method: \"PATCH\",\n      headers: this.headers,\n      body: JSON.stringify({\n        name: userName,\n        about: userAbout,\n      }),\n    }).then(this._response);\n  }\n\n  sendUserAvatar(userAvatar) {\n    return fetch(`${this.baseUrl}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this.headers,\n      body: JSON.stringify({\n        avatar: userAvatar,\n      }),\n    }).then(this._response);\n  }\n\n  getInitialCards() {\n    return fetch(`${this.baseUrl}/cards`, {\n      method: \"GET\",\n      headers: this.headers,\n    }).then(this._response);\n  }\n\n  postNewCard(cardName, cardLink) {\n    console.log(this.headers)\n    return fetch(`${this.baseUrl}/cards`, {\n      method: \"POST\",\n      headers: this.headers,\n      body: JSON.stringify({\n        name: cardName,\n        link: cardLink,\n      }),\n    }).then(this._response);\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this.baseUrl}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: this.headers,\n    }).then(this._response);\n  }\n\n  addLike(cardId) {\n    return fetch(`${this.baseUrl}/cards/likes/${cardId}`, {\n      method: \"PUT\",\n      headers: this.headers,\n    }).then(this._response);\n  }\n\n  removeLike(cardId) {\n    return fetch(`${this.baseUrl}/cards/likes/${cardId}`, {\n      method: \"DELETE\",\n      headers: this.headers,\n    }).then(this._response);\n  }\n\n  changeLikeCardStatus(_id, b) {\n    if (b) {\n      return fetch(`${this.baseUrl}/cards/likes/${_id}`, {\n        method: \"PUT\",\n        headers: this.headers,\n      }).then(this._response);\n    }\n    else {\n      return fetch(`${this.baseUrl}/cards/likes/${_id}`, {\n        method: \"DELETE\",\n        headers: this.headers,\n      }).then(this._response);\n    }\n  }\n}\n\n// Создаем экземпляр класса АПИ с нашими настройками\n","import {PopupWithForm} from \"./PopupWithForm\";\nimport React from \"react\";\nimport {CurrentUserContext} from '../contex/CurrentUserContext';\n\n\nexport function EditProfilePopup(props) {\n    // Подписка на контекст\n    const currentUser = React.useContext(CurrentUserContext);\n    // добавьте стейт-переменные name и description и привяжите их к полям ввода, сделав их управляемыми\n    const [name, setName]= React.useState(\"\");\n    const [description, setDescription]= React.useState(\"\");\n\n    const handleNameChange = (e) => {\n        setName(e.target.value);\n    }\n    const handleDescriptionChange = (e) => {\n        setDescription(e.target.value);\n    }\n    function handleSubmit(e) {\n        // Запрещаем браузеру переходить по адресу формы\n        e.preventDefault();\n        // Передаём значения управляемых компонентов во внешний обработчик\n        props.onUpdateUser({\n            name,\n            about: description,\n        });\n    }\n    // После загрузки текущего пользователя из API\n    // его данные будут использованы в управляемых компонентах.\n    React.useEffect(() => {\n        setName(currentUser.name);\n        setDescription(currentUser.about);\n    }, [currentUser]);\n\n    return (<PopupWithForm onSubmit={handleSubmit} onClose={props.onClose} isOpen={props.isOpen} title='Редактировать профиль'\n                           name='profile' buttonText='Сохранить' children={\n\n        <>\n            <label className=\"form__field\">\n                <input\n                    type=\"text\"\n                    className=\"form__item form__item_el_name\"\n                    id=\"name\"\n                    name=\"name\"\n                    required\n                    minLength=\"2\"\n                    maxLength=\"40\"\n                    value={name || ''}\n                    onChange={handleNameChange}\n                />\n                <div className=\"form__error-text\" id=\"name-error\"></div>\n            </label>\n            <label className=\"form__field\">\n                <input\n                    type=\"text\"\n                    className=\"form__item form__item_el_job\"\n                    id=\"job\"\n                    name=\"job\"\n                    required\n                    minLength=\"2\"\n                    maxLength=\"200\"\n                    value={description || ''}\n                    onChange={handleDescriptionChange}\n                />\n                <div className=\"form__error-text\" id=\"job-error\"></div>\n            </label>\n        </>}/>)\n}\n","import {PopupWithForm} from \"./PopupWithForm\";\nimport React from \"react\";\n\nexport function EditAvatarPopup(props){\n\n    const avatarRef = React.useRef(0);\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        props.onUpdateAvatar({\n            avatar: avatarRef.current.value,\n        });\n    }\n\n    React.useEffect(() => {\n        avatarRef.current.value = \"\";\n    }, [props.isOpen]);\n\n    return(\n        <PopupWithForm onClose={props.onClose} isOpen={props.isOpen} title='Обновить аватар'\n                       onSubmit={handleSubmit} name='avatar' buttonText='Сохранить' children={<>\n            <label className=\"form__field\">\n                <input\n                    type=\"url\"\n                    className=\"form__item form__item_el_link\"\n                    id=\"link\"\n                    name=\"link\"\n                    placeholder=\"https://somewebsite.com/someimage.jpg\"\n                    required\n                    ref={avatarRef}\n                />\n                <div className=\"form__error-text\" id=\"link-error\"></div>\n            </label>\n        </>}/>\n    )\n}\n\n","import {PopupWithForm} from \"./PopupWithForm\";\nimport React from \"react\";\n\nexport function AddPlacePopup(props){\n\n    const [title, setTitle]= React.useState('');\n    const [link, setLink]= React.useState('');\n\n    function handleTitleChange(e) {\n        setTitle(e.target.value);\n    }\n    function handleLinkChange(e) {\n        setLink(e.target.value);\n    }\n\n    function handleSubmit(e){\n        e.preventDefault();\n        props.onAddPlace({\n            name: title,\n            link: link\n        })\n\n    }\n    React.useEffect(() => {\n        setTitle(\"\")\n        setLink(\"\")\n    }, [props.isOpen]);\n\n    return(\n        <PopupWithForm onSubmit={handleSubmit} onClose={props.onClose} isOpen={props.isOpen} title='Новое место' name='add'\n                       buttonText='Создать' children={\n            <>\n\n                <label className=\"form__field\">\n                    <input\n                        type=\"text\"\n                        className=\"form__item form__item_el_place\"\n                        id=\"place\"\n                        name=\"place\"\n                        placeholder=\"Название\"\n                        required\n                        minLength=\"1\"\n                        maxLength=\"30\"\n                        value={title}\n                        onChange={handleTitleChange}\n                    />\n                    <div className=\"form__error-text\" id=\"place-error\"></div>\n                </label>\n                <label className=\"form__field\">\n                    <input\n                        type=\"url\"\n                        className=\"form__item form__item_el_img\"\n                        id=\"img\"\n                        name=\"img\"\n                        placeholder=\"Ссылка на картинку\"\n                        required\n                        value={link}\n                        onChange={handleLinkChange}\n                    />\n                    <div className=\"form__error-text\" id=\"img-error\"></div>\n                </label>\n\n            </>}/>\n\n    )\n}","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nconst ProtectedRoute = ({ loggedIn, Component }) => {\n  return (\n    <Route>\n      {() => {\n        return loggedIn ? Component : <Redirect to=\"/sign-up\" />;\n      }}\n    </Route>\n  );\n};\n\nexport default ProtectedRoute;\n","export default __webpack_public_path__ + \"static/media/Union.df8eddf6.svg\";","export default __webpack_public_path__ + \"static/media/Union-2.1b6082f8.svg\";","import fail from \"../images/Union.svg\";\nimport success from \"../images/Union-2.svg\";\n\nexport function InfoTooltip(props) {\n  return (\n    <div className={`popup ${props.isOpen ? \"popup_opened\" : \"\"}`}>\n      <div className={\"popup__container\"}>\n        <button\n          className=\"button button_type_close\"\n          type=\"button\"\n          onClick={props.onClose}\n        />\n        <img\n          className={\"icon\"}\n          alt={\"icon\"}\n          src={`${props.error ? fail : success}`}\n        ></img>\n        <h2 className=\"infotooltip__title\">{props.message}</h2>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Header from \"./Header\";\nimport { Link } from \"react-router-dom\";\nimport { InfoTooltip } from \"./InfoTooltip\";\n\nexport function Register(props) {\n  const [email, setEmail] = React.useState(\"\");\n  const [password, setPassword] = React.useState(\"\");\n\n  const resetForm = () => {\n    setEmail(\"\");\n    setPassword(\"\");\n  };\n\n  const handleEmailChange = (e) => {\n    setEmail(e.target.value);\n  };\n  const handlePasswordChange = (e) => {\n    setPassword(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    props.handleRegister(email, password);\n    resetForm();\n  };\n\n  return (\n    <>\n      <Header name={\"Войти\"} page={\"/sign-in\"}></Header>\n      <main className=\"login\">\n        <section className=\"login__register\">\n          <form\n            onSubmit={handleSubmit}\n            className=\"login__form\"\n            name=\"register\"\n            noValidate\n          >\n            <h2 className=\"login__title\">Регистрация</h2>\n            <fieldset className=\"login__field\">\n              <label className=\"login__label\">\n                <input\n                  placeholder=\"Email\"\n                  type=\"text\"\n                  className=\"login__item login__item_el_name\"\n                  id=\"email\"\n                  name=\"email\"\n                  required\n                  minLength=\"2\"\n                  maxLength=\"40\"\n                  value={email || \"\"}\n                  onChange={handleEmailChange}\n                />\n              </label>\n              <label className=\"login__field\">\n                <input\n                  placeholder=\"password\"\n                  type=\"text\"\n                  className=\"login__item login__item_el_job\"\n                  id=\"password\"\n                  name=\"password\"\n                  required\n                  minLength=\"2\"\n                  maxLength=\"200\"\n                  value={password || \"\"}\n                  onChange={handlePasswordChange}\n                />\n              </label>\n              <button className=\"button button_type_login\">\n                Зарегистрироваться\n              </button>\n            </fieldset>\n          </form>\n          <div className=\"login__wrapper\">\n            <p className=\"login__text\">\n              Уже зарегистрированы?\n              <Link to=\"sign-in\" className=\"login__link\">\n                {\" \"}\n                Войти\n              </Link>\n            </p>\n          </div>\n        </section>\n      </main>\n      <InfoTooltip\n        onClose={props.onClose}\n        isOpen={props.isToolTipOpen}\n        error={props.error}\n        message={props.message}\n      ></InfoTooltip>\n    </>\n  );\n}\n","import React from \"react\";\nimport Header from \"./Header\";\n\nexport function Login(props) {\n  const [email, setEmail] = React.useState(\"\");\n  const [password, setPassword] = React.useState(\"\");\n\n  const resetForm = () => {\n    setEmail(\"\");\n    setPassword(\"\");\n  };\n\n  const handleEmailChange = (e) => {\n    setEmail(e.target.value);\n  };\n  const handlePasswordChange = (e) => {\n    setPassword(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    props.handleLogin(email, password);\n    resetForm();\n  };\n\n  return (\n    <>\n      <Header name={\"Регистрация\"} page={\"/sign-up\"}></Header>\n      <main className=\"login\">\n        <section className=\"login__register\">\n          <form\n            onSubmit={handleSubmit}\n            className=\"login__form\"\n            name=\"register\"\n            noValidate\n          >\n            <h2 className=\"login__title\">Вход</h2>\n            <fieldset className=\"login__field\">\n              <label className=\"login__label\">\n                <input\n                  placeholder=\"Email\"\n                  type=\"text\"\n                  className=\"login__item login__item_el_name\"\n                  id=\"email\"\n                  name=\"email\"\n                  required\n                  minLength=\"2\"\n                  maxLength=\"40\"\n                  value={email || \"\"}\n                  onChange={handleEmailChange}\n                />\n              </label>\n              <label className=\"login__field\">\n                <input\n                  placeholder=\"password\"\n                  type=\"text\"\n                  className=\"login__item login__item_el_job\"\n                  id=\"password\"\n                  name=\"password\"\n                  required\n                  minLength=\"2\"\n                  maxLength=\"200\"\n                  value={password || \"\"}\n                  onChange={handlePasswordChange}\n                />\n              </label>\n              <button className=\"button button_type_login\">Войти</button>\n            </fieldset>\n          </form>\n        </section>\n      </main>\n    </>\n  );\n}\n","export const BASE_URL = 'http://api.eeealesha.students.nomoredomains.icu';\n\nexport const register = (email, password) => {\n    return fetch(`${BASE_URL}/signup`, {\n        method: 'POST',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ email, password })\n    })\n        .then((res) => {\n            return res.json();\n        })\n        .then((res) => {\n            return res\n        })\n        .catch((err) => {\n            return console.log(err)\n        })\n};\n\nexport const authorize = (email, password) => {\n    return fetch(`${ BASE_URL }/signin`, {\n        method: 'POST',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ email, password })\n    })\n        .then((res) => {\n            return res.json();\n        })\n        .then((data) => {\n            if (data.token) {\n                localStorage.setItem('token', data.token);\n                return data;\n            }\n        })\n        .catch((err) => {\n            return console.log(err)\n        })\n};\n\nexport const getContent = (token) => {\n    return fetch(`${BASE_URL}/users/me`, {\n        method: 'GET',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n        }\n    })\n        .then((res) => {\n            return res.json()\n        })\n        .then((data) => {\n            return (data)\n        })\n        .catch((err) => {\n            return console.log(err)\n        })\n};","import Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport { PopupWithForm } from \"./PopupWithForm\";\nimport { ImagePopup } from \"./ImagePopup\";\nimport React from \"react\";\nimport {Api} from \"../utils/api\";\nimport { EditProfilePopup } from \"./EditProfilePopup\";\nimport { EditAvatarPopup } from \"./EditAvatarPopup\";\nimport { AddPlacePopup } from \"./AddPlacePopup\";\nimport { Switch, Route, useHistory, Redirect } from \"react-router-dom\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport { Register } from \"./Register\";\nimport { Login } from \"./Login\";\nimport * as auth from \"../utils/auth\";\n\n//Импортируйте этот объект в App и используйте его провайдер\n\nimport { CurrentUserContext } from \"../contex/CurrentUserContext\";\n\nfunction App() {\n  // Создаем стейт-переменную логина\n  const [isLoggedIn, setIsLoggedIn] = React.useState(false);\n  // Создаем стейт-переменные попапов\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = React.useState(\n    false\n  ); // true или false\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = React.useState(false); // true или false\n  const [isEditAvatarPopupOpen, setAvatarPopupOpen] = React.useState(false); // true или false\n  const [isImagePopupOpen, setImagePopupOpen] = React.useState(false); // true или false\n  // Создаем стейт-переменную выбранной карточки\n  const [selectedCard, setSelectedCard] = React.useState(null);\n  // Создайте стейт currentUser в корневом компоненте\n  const [currentEmail, setCurrentEmail] = React.useState(null);\n  const [currentUser, setCurrentUser] = React.useState({});\n  // Создаем стейт-переменные для массива карточек\n  const [cards, setCards] = React.useState([]);\n\n  const [message, setMessage] = React.useState(\"\");\n  const [isToolTipOpen, setToolTipOpen] = React.useState(false);\n  const [error, setError] = React.useState(false);\n\n  const history = useHistory();\n\n  const api = new Api({\n    baseUrl: \"http://api.eeealesha.students.nomoredomains.icu\",\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${localStorage.getItem(\"token\")}`\n    },\n  });\n\n  function updateInfo() {\n    Promise.all([\n      //в Promise.all передаем массив промисов которые нужно выполнить\n      api.getInitialCards(),\n      api.getUserInfo(),\n    ])\n    .then((values) => {\n      //попадаем сюда когда оба промиса будут выполнены\n      const [initialCards, userData] = values;\n      setCurrentUser(userData);\n      setCards(initialCards);\n      // у нас есть все нужные данные, отрисовываем страницу\n    })\n    .catch((err) => {\n      //попадаем сюда если один из промисов завершаться ошибкой\n      console.log(err);\n    });\n  }\n\n  React.useEffect(() => {\n    updateInfo()\n  }, []);\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\n\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api\n      .changeLikeCardStatus(card._id, !isLiked)\n      .then((newCard) => {\n        // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\n        const newCards = cards.map((c) => (c._id === card._id ? newCard : c));\n        // Обновляем стейт\n        setCards(newCards);\n      })\n      .catch((err) => {\n        //попадаем сюда если один из промисов завершаться ошибкой\n        console.log(err);\n      });\n  }\n\n  function handleCardDelete(card) {\n    // Снова проверяем, являемся ли мы владельцем карточки\n    const isOwn = card.owner._id === currentUser._id;\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    console.log(card._id)\n    api\n      .deleteCard(card._id, !isOwn)\n      .then(() => {\n        // Формируем новый массив на основе имеющегося, фильтраю по номеру карточки\n        const newCards = cards.filter((c) => c._id !== card._id);\n        // Обновляем стейт\n        setCards(newCards);\n      })\n      .catch((err) => {\n        //попадаем сюда если один из промисов завершаться ошибкой\n        console.log(err);\n      });\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n    setImagePopupOpen(true);\n  }\n\n  function handleEditAvatar() {\n    setAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setAddPlacePopupOpen(true);\n  }\n\n  function handleUpdateUser({ name, about }) {\n    api\n      .sendUserInfo(name, about)\n      .then((res) => {\n        setCurrentUser(res);\n        closeAllPopups();\n      })\n      .catch((err) => console.log(err));\n  }\n\n  function handleUpdateAvatar({ avatar }) {\n    api\n      .sendUserAvatar(avatar)\n      .then((res) => {\n        setCurrentUser(res);\n        closeAllPopups();\n      })\n      .catch((err) => console.log(err));\n  }\n\n  function handleAddPlaceSubmit({ name, link }) {\n    console.log(localStorage)\n    api\n      .postNewCard(name, link)\n      .then((res) => {\n        setCards([res, ...cards]);\n        closeAllPopups();\n      })\n      .catch((err) => console.log(err));\n  }\n\n  function closeAllPopups() {\n    setAvatarPopupOpen(false);\n    setEditProfilePopupOpen(false);\n    setAddPlacePopupOpen(false);\n    setSelectedCard(null);\n    setImagePopupOpen(false);\n    setToolTipOpen(false);\n  }\n\n  function handleSignOut() {\n    localStorage.removeItem(\"token\");\n    history.push(\"/sign-in\");\n    setIsLoggedIn(false);\n  }\n\n  const handleRegister = (email, password) => {\n    setError(false);\n    if (!email || !password) {\n      console.log(\"Введите email и пароль\");\n    }\n    auth\n      .register(email, password)\n      .then((res) => {\n        console.log(res);\n        if (!res.message && !res.error) {\n          setMessage(\"Вы успешно зарегистрировались!\");\n        } else {\n          setError(true);\n          setMessage(res.message || res.error);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    setToolTipOpen(true);\n  };\n\n  const handleLogin = (email, password) => {\n    if (!email || !password) {\n      console.log(\"Введите email и пароль\");\n    }\n    auth\n      .authorize(email, password)\n      .then((data) => {\n        if (data === undefined) {\n          console.log(\"Нет такого пользователя\");\n        }\n        if (data.token) {\n          localStorage.setItem(\"token\", data.token)\n          history.push(\"/\");\n          setIsLoggedIn(true);\n        }\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const tokenCheck = () => {\n    console.log(localStorage)\n    const token = localStorage.getItem(\"token\");\n    if (localStorage.getItem(\"token\")) {\n      auth\n        .getContent(token)\n        .then((res) => {\n          if (res) {\n            setCurrentUser(res)\n            setCurrentEmail(res.email);\n            setIsLoggedIn(true);\n            history.push(\"/\");\n          } else {\n            localStorage.removeItem(\"token\");\n          }\n        })\n        .catch((err) => console.log(err));\n    }\n  };\n\n  React.useEffect(() => {\n    tokenCheck();\n  }, [isLoggedIn]);\n\n  return (\n    <>\n      <CurrentUserContext.Provider value={currentUser}>\n        <div className=\"page\">\n          <Switch>\n            <Route path=\"/sign-up\">\n              <Register\n                handleRegister={handleRegister}\n                error={error}\n                message={message}\n                isToolTipOpen={isToolTipOpen}\n                onClose={closeAllPopups}\n              />\n            </Route>\n            <Route path=\"/sign-in\">\n              <Login handleLogin={handleLogin} />\n            </Route>\n            <ProtectedRoute\n              path=\"/\"\n              loggedIn={isLoggedIn}\n              Component={\n                <>\n                  <Header\n                    email={currentEmail}\n                    onClick={handleSignOut}\n                    name=\"Выйти\"\n                    page=\"/sign-in\"\n                  ></Header>\n                  <Main\n                    cards={cards}\n                    onCardLike={handleCardLike}\n                    onCardDelete={handleCardDelete}\n                    onEditAvatar={handleEditAvatar}\n                    onAddPlace={handleAddPlaceClick}\n                    onEditProfile={handleEditProfileClick}\n                    onCardClick={handleCardClick}\n                  />\n                </>\n              }\n            />\n            <Route exact path=\"/\">\n              {isLoggedIn ? <Redirect to=\"/\" /> : <Redirect to=\"/sign-in\" />}\n            </Route>\n          </Switch>\n          <Footer />\n          <EditProfilePopup\n            onUpdateUser={handleUpdateUser}\n            isOpen={isEditProfilePopupOpen}\n            onClose={closeAllPopups}\n          />\n          <EditAvatarPopup\n            onUpdateAvatar={handleUpdateAvatar}\n            isOpen={isEditAvatarPopupOpen}\n            onClose={closeAllPopups}\n          />\n          <AddPlacePopup\n            onAddPlace={handleAddPlaceSubmit}\n            isOpen={isAddPlacePopupOpen}\n            onClose={closeAllPopups}\n          />\n          <PopupWithForm\n            onClose={closeAllPopups}\n            title=\"Вы уверены?\"\n            name=\"confirm\"\n            buttonText=\"Да\"\n          />\n          <ImagePopup\n            onClose={closeAllPopups}\n            isOpen={isImagePopupOpen}\n            card={selectedCard}\n          />\n        </div>\n      </CurrentUserContext.Provider>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './pages/index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n      <BrowserRouter>\n            <App />\n      </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}